name: Verify

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 21
      - uses: gradle/actions/setup-gradle@v4
      - run: chmod +x gradlew
      # --no-build-cache because of https://github.com/JLLeitschuh/ktlint-gradle/issues/522#issuecomment-1843237381
      - run: ./gradlew --no-build-cache ktlintCheck :buildSrc:ktlintCheck

  android-tests:
    continue-on-error: true
    runs-on: ubuntu-latest
    name: Tests / Android
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 21
      - uses: gradle/actions/setup-gradle@v4
      - run: chmod +x gradlew
      - run: ./gradlew assembleDebug
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Run instrumentation tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          emulator-boot-timeout: 300
          arch: x86_64
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew connectedAndroidTest --stacktrace --continue
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-results-android
          path: build/reports

  tests:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu, macos]
    runs-on: ${{ matrix.os }}-latest
    name: Tests / ${{ matrix.os == 'ubuntu' && 'Ubuntu' || matrix.os == 'windows' && 'Windows' || matrix.os == 'macos' && 'macOs' }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v4
      - run: chmod +x gradlew
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 21
      - run: ./gradlew allTests --stacktrace
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-results-${{ matrix.os }}-${{ matrix.release == true && 'release' || 'debug' }}
          path: build/reports

  publication:
    strategy:
      matrix:
        os: [ ubuntu, windows, macos ]
    runs-on: ${{ matrix.os }}-latest
    name: Publication test / ${{ matrix.os == 'ubuntu' && 'Ubuntu' || matrix.os == 'windows' && 'Windows' || matrix.os == 'macos' && 'macOs' }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v4
      - run: chmod +x gradlew
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 21
      - run: ./gradlew publishAllPublicationsToTestRepository --stacktrace